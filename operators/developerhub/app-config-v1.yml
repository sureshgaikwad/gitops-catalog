kind: ConfigMap
apiVersion: v1
metadata:
  name: app-config-rhdh
  namespace: developer-hub #project-namespace
data:
  app-config-rhdh.yaml: |
    signInPage: github
    app:
      title: My Red Hat Developer Hub Instance
      baseUrl: ${baseUrl}  # base url is coming from the 'secrets_rdhd-secret.yaml' config in 'setting-up-developer-hub-through-the-operator'
    backend:
      auth:
        keys:
          - secret: ${BACKEND_SECRET}  # BACKEND_SECRET is coming from the 'secrets_rdhd-secret.yaml' config in 'setting-up-developer-hub-through-the-operator'
      baseUrl: ${baseUrl}   # base url is coming from the 'secrets_rdhd-secret.yaml' config in 'setting-up-developer-hub-through-the-operator'
      cors:
        origin: ${baseUrl}   # base url is coming from the 'secrets_rdhd-secret.yaml' config in 'setting-up-developer-hub-through-the-operator'
    integrations:
      github:
        - host: github.com
          #token: <github personal access token>
          apps:
            - appId: ${RHDH_GITHUB_APP_ID}
              clientId: ${RHDH_GITHUB_APP_CLIENT_ID}
              clientSecret: ${RHDH_GITHUB_APP_CLIENT_SECRET}
              callbackUrl: https://backstage-developer-hub-developer-hub.apps.rosa.i6x3z5p5a2r0i4l.7ued.p3.openshiftapps.com/handler
              webhookUrl: none
              webhookSecret: none
              privateKey: ${RHDH_GITHUB_APP_PRIVATE_KEY}
    catalog:
      providers:
        github:
          # the provider ID can be any camelCase string
          providerId:
            organization: ${RHDH_GITHUB_ORGANIZATION} # the name of the GitHub organization
            catalogPath: '/catalog-info.yaml' # the path where your catalog info file will be placed within projects than need to be scanned
            filters:
              branch: 'master' # string
              repository: '.*' # Regex
            schedule: # optional; same options as in TaskScheduleDefinition
              # supports cron, ISO duration, "human duration" as used in code
              frequency: { minutes: 1 }
              # supports ISO duration, "human duration" as used in code
              timeout: { minutes: 1 }
              initialDelay: { seconds: 15 }
    auth:
      environment: development
      session:
        secret: ${BACKEND_SECRET}
      providers:
        # allow guest authentication for now
        guest:
          dangerouslyAllowOutsideDevelopment: true
